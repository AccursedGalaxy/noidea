name: Version Bump

on:
  workflow_dispatch:
    inputs:
      bump_type:
        description: 'Type of version bump'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  bump-version:
    name: Bump Version
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Get latest tag
        id: get_latest_tag
        run: |
          latest_tag=$(git describe --tags $(git rev-list --tags --max-count=1) 2>/dev/null || echo "v0.0.0")
          echo "LATEST_TAG=$latest_tag" >> $GITHUB_OUTPUT
          echo "Current version: $latest_tag"

      - name: Set lowercase repository owner
        id: repository_owner
        run: echo "OWNER=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

      - name: Bump version
        id: bump_version
        run: |
          latest_tag=${{ steps.get_latest_tag.outputs.LATEST_TAG }}
          # Remove 'v' prefix
          version=${latest_tag#v}
          
          # Split version into components
          IFS='.' read -r -a version_parts <<< "$version"
          major=${version_parts[0]:-0}
          minor=${version_parts[1]:-0}
          patch=${version_parts[2]:-0}
          
          # Bump version according to input
          case "${{ github.event.inputs.bump_type }}" in
            major)
              major=$((major + 1))
              minor=0
              patch=0
              ;;
            minor)
              minor=$((minor + 1))
              patch=0
              ;;
            patch)
              patch=$((patch + 1))
              ;;
          esac
          
          # Create new version
          new_version="v$major.$minor.$patch"
          echo "NEW_VERSION=$new_version" >> $GITHUB_OUTPUT
          echo "New version: $new_version"

      - name: Update version in root.go
        run: |
          sed -i "s/Version   = \"[^\"]*\"/Version   = \"${{ steps.bump_version.outputs.NEW_VERSION }}\"/" cmd/root.go
          
          # Update version in main commit message
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add cmd/root.go
          git commit -m "Bump version to ${{ steps.bump_version.outputs.NEW_VERSION }}"

      - name: Create Tag
        run: |
          git tag -a ${{ steps.bump_version.outputs.NEW_VERSION }} -m "Release ${{ steps.bump_version.outputs.NEW_VERSION }}"
          git push origin ${{ steps.bump_version.outputs.NEW_VERSION }}
          git push 