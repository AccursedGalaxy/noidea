name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build-and-release:
    name: Build and Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'
          cache: true

      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Build release binaries
        run: make release
        env:
          VERSION: ${{ steps.get_version.outputs.VERSION }}

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          name: noidea ${{ steps.get_version.outputs.VERSION }}
          draft: false
          prerelease: false
          generate_release_notes: true
          files: |
            dist/noidea_*
            dist/checksums-*.txt
          token: ${{ secrets.GITHUB_TOKEN }}

  docker-release:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: build-and-release
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Set lowercase repository owner
        id: repository_owner
        run: echo "OWNER=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ steps.repository_owner.outputs.OWNER }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get build date
        id: build_date
        run: echo "DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          build-args: |
            VERSION=${{ steps.get_version.outputs.VERSION }}
            COMMIT=${{ github.sha }}
            BUILD_DATE=${{ steps.build_date.outputs.DATE }}
          tags: |
            ghcr.io/${{ steps.repository_owner.outputs.OWNER }}/noidea:latest
            ghcr.io/${{ steps.repository_owner.outputs.OWNER }}/noidea:${{ steps.get_version.outputs.VERSION }} 