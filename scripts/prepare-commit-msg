#!/bin/sh
#
# prepare-commit-msg hook for noidea's commit message suggestion feature
# 
# To install this hook:
# 1. Make it executable (chmod +x prepare-commit-msg)
# 2. Copy it to .git/hooks/ in your repository
# 3. Configure noidea with 'git config noidea.suggest true' to enable
#
# Note: Commit message suggestions always use a professional format
# regardless of any personality settings used elsewhere in noidea.

# Get commit message file
COMMIT_MSG_FILE=$1
COMMIT_SOURCE=$2

# Check if noidea's suggestion feature is enabled
if [ "$(git config --get noidea.suggest)" != "true" ]; then
    exit 0
fi

# Skip if it's a merge, rebase, or cherry-pick
if [ "$COMMIT_SOURCE" = "merge" ] || [ "$COMMIT_SOURCE" = "squash" ] || [ -n "$COMMIT_SOURCE" ]; then
    exit 0
fi

# Find the noidea binary in several possible locations
# POSIX-compatible function definition
find_noidea() {
    # Check if it's in PATH
    if command -v noidea >/dev/null 2>&1; then
        echo "noidea"
        return 0
    fi

    # Try to determine the git root
    GIT_ROOT=$(git rev-parse --show-toplevel 2>/dev/null)
    if [ -n "$GIT_ROOT" ]; then
        # Check if noidea is at the git root
        if [ -x "$GIT_ROOT/noidea" ]; then
            echo "$GIT_ROOT/noidea"
            return 0
        fi
        
        # Check in common binary locations - one by one for better POSIX compatibility
        if [ -x "$GIT_ROOT/bin/noidea" ]; then
            echo "$GIT_ROOT/bin/noidea"
            return 0
        fi
        
        if [ -x "$GIT_ROOT/build/noidea" ]; then
            echo "$GIT_ROOT/build/noidea"
            return 0
        fi
        
        if [ -x "$GIT_ROOT/dist/noidea" ]; then
            echo "$GIT_ROOT/dist/noidea"
            return 0
        fi
    fi
    
    # Not found
    return 1
}

# Find the noidea binary
NOIDEA_BIN=$(find_noidea)
if [ -z "$NOIDEA_BIN" ]; then
    echo "Warning: noidea binary not found, but noidea.suggest is enabled"
    echo "Please ensure noidea is in your PATH or at the repository root"
    exit 0
fi

# Check if the commit message already has content
if [ -s "$COMMIT_MSG_FILE" ]; then
    # Has content already - user may have specified a message with -m
    # Skip if the file already has content beyond comments
    if grep -v "^#" "$COMMIT_MSG_FILE" | grep -q "[^[:space:]]"; then
        exit 0
    fi
fi

# Always use non-interactive mode for hooks to prevent stdin issues
# The user can still edit the message in their editor after suggestion
INTERACTIVE_FLAG=""

# Check if there's enough history for context
COMMIT_COUNT=$(git rev-list --count HEAD 2>/dev/null || echo "0")
if [ "$COMMIT_COUNT" -lt 5 ]; then
    HISTORY_FLAG="--history 1"
else
    HISTORY_FLAG="--history 10"
fi

# Get full diff setting from config
FULL_DIFF=$(git config --get noidea.suggest.full-diff)
if [ "$FULL_DIFF" = "true" ]; then
    DIFF_FLAG="--full-diff"
else
    DIFF_FLAG=""
fi

# Generate a suggested commit message
echo "üß† Generating commit message suggestion..."
"$NOIDEA_BIN" suggest $INTERACTIVE_FLAG $HISTORY_FLAG $DIFF_FLAG --file "$COMMIT_MSG_FILE"

# Exit status depends on whether we successfully wrote to the file
if [ -s "$COMMIT_MSG_FILE" ]; then
    echo "‚úÖ Commit message suggestion applied"
    exit 0
else
    echo "‚ùå Failed to generate commit message suggestion"
    exit 1
fi 